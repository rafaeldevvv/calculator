* {
   padding: 0;
   margin: 0;
   box-sizing: border-box;
}

:root {
   --c-primary: ;
   --c-secondary: ;
   --c-tertiary: ;

   --c-normal-key-bg: ;
   --c-normal-key-shadow: ;
   --c-special-key-bg: ;
   --c-special-key-shadow: ;
   --c-most-special-key-bg: ;
   --c-most-special-key-shadow: ;

   --c-paren: ;
   --c-sign: ;

   /*
   (COMMENT FOR SELF-LEARNING, NO NEED TO READ)
   it tried to do var(--c-most-special-key-bg) 
   because i thought it would always get the value for that variable
   but it happens that as custom properties are inherited and --c-form-control: ;
   is defined here in :root, it gets the value that --c-most-special-key-bg has in the
   :root, not in the nested theme classes defined below. So i have to assign assign values for
   this property in the theme classes. */
   --c-form-control: ;

   --c-text-primary: ;
   --c-text-secondary: ;

   --fs-100: .7rem;
   --fs-200: 1rem;
   --fs-300: 1.4rem;
   --fs-400: 2rem;
   --fs-500: 2.5rem;

   --ff-sans: "League Spartan", sans-serif;
}

.theme-blue {
   --c-primary: 222 26% 31%;
   --c-secondary: 223 31% 20%;
   --c-tertiary: 224 36% 15%;

   --c-normal-key-bg: 30 25% 89%;
   --c-normal-key-shadow: 28 16% 65%;
   --c-special-key-bg: 225 21% 49%;
   --c-special-key-shadow: 224 28% 35%;
   --c-most-special-key-bg: 6 63% 50%;
   --c-most-special-key-shadow: 6 70% 34%;

   --c-paren: 225 21% 70%;
   --c-sign: 52 100% 55%;

   --c-form-control: var(--c-most-special-key-bg);

   --c-text-primary: 0 0% 100%;
   --c-text-secondary: 221 14% 31%;
   --c-text-tertiary: 0 0% 100%;
}

.theme-white {
   --c-primary: 0 0% 90%;
   --c-secondary: 0 5% 81%;
   --c-tertiary: 0 0% 93%;

   --c-special-key-bg: 185 42% 37%;
   --c-special-key-shadow: 185 58% 25%;
   --c-most-special-key-bg: 25 98% 40%;
   --c-most-special-key-shadow: 25 99% 27%;
   --c-normal-key-bg: 45 7% 89%;
   --c-normal-key-shadow: 35 11% 61%;

   --c-paren: 185 58% 25%;
   --c-sign: 25 98% 30%;

   --c-form-control: var(--c-most-special-key-bg);

   --c-text-primary: 60 10% 19%;
   --c-text-secondary: 60 10% 19%;
   --c-text-tertiary: 0 0% 100%;
}

.theme-purple,
.theme-default {
   --selected-brightness: 1.8;

   --c-primary: 268 75% 9%;
   --c-secondary: 268 71% 12%;
   --c-tertiary: 268 71% 12%;

   --c-special-key-bg: 281 89% 26%;
   --c-special-key-shadow: 285 91% 52%;
   --c-most-special-key-bg: 176 100% 44%;
   --c-most-special-key-shadow: 177 92% 70%;
   --c-normal-key-bg: 268 47% 21%;
   --c-normal-key-shadow: 290 70% 36%;

   --c-paren: 281 89% 73%;
   --c-sign: 177 92% 70%;

   --c-form-control: var(--c-most-special-key-bg);

   --c-text-primary: 52 100% 62%;
   --c-text-secondary: 52 100% 62%;
   --c-text-tertiary: var(--c-primary);
}

/* 
   javascript handles the default theme
   this is just in case js doesn't load
   or is disabled
   but if js is not available the whole 
   page loses its purpose
*/
@media (prefers-color-scheme: light) {
   .theme-default {
      --c-primary: 0 0% 90%;
      --c-secondary: 0 5% 81%;
      --c-tertiary: 0 0% 93%;

      --c-special-key-bg: 185 42% 37%;
      --c-special-key-shadow: 185 58% 25%;
      --c-most-special-key-bg: 25 98% 40%;
      --c-most-special-key-shadow: 25 99% 27%;
      --c-normal-key-bg: 45 7% 89%;
      --c-normal-key-shadow: 35 11% 61%;

      --c-paren: 185 58% 25%;
      --c-sign: 25 98% 30%;

      --c-form-control: var(--c-most-special-key-bg);

      --c-text-primary: 60 10% 19%;
      --c-text-secondary: 60 10% 19%;
      --c-text-tertiary: 0 0% 100%;
   }
}

html,
body {
   min-height: 100vh;
}

body {
   background-color: hsl(var(--c-primary));
   font-size: var(--fs-300);
   color: hsl(var(--c-text-primary));

   display: flex;
   place-items: center;
}

main {
   padding-inline: 1.5rem;
   max-width: 33rem;
   width: 100%;
   margin-inline: auto;
}

img,
picture {
   max-width: 100%;
   display: block;
}

/* make forms easier to work with */
input,
button,
textarea,
select {
   font: inherit;
}

button {
   display: block;
   border: 0;
   cursor: pointer;
   background-color: transparent;
}

input[type=radio] {
   cursor: pointer;
}

ul {
   list-style-type: none;
}

/* remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {

   *,
   *::before,
   *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
   }
}

/* ================== Utilities ==================== */
.fs-100 {
   font-size: var(--fs-100);
}

.fs-200 {
   font-size: var(--fs-200);
}

.fs-300 {
   font-size: var(--fs-300);
}

.fs-400 {
   font-size: var(--fs-400);
}

.fs-500 {
   font-size: var(--fs-500);
}

.ff-sans {
   font-family: var(--ff-sans);
}

.fw-400 {
   font-weight: 400;
}

.fw-500 {
   font-weight: 500;
}

.fw-600 {
   font-weight: 600;
}

.fw-700 {
   font-weight: 700;
}

.fw-800 {
   font-weight: 800;
}

.text-primary {
   color: hsl(var(--c-text-primary));
}

.text-secondary {
   color: hsl(var(--c-text-secondary));
}

.text-tertiary {
   color: hsl(var(--c-text-tertiary));
}

.text-white {
   color: #fff;
}

.uppercase {
   text-transform: uppercase;
}

.lowercase {
   text-transform: lowercase;
}

.capitalize {
   text-transform: capitalize;
}

.letter-spacing-1 {
   letter-spacing: 1px;
}

.bg-primary {
   background-color: hsl(var(--c-primary));
}

.bg-secondary {
   background-color: hsl(var(--c-secondary));
}

.bg-tertiary {
   background-color: hsl(var(--c-tertiary));
}

.flex {
   display: flex;
}

.justify-between {
   justify-content: space-between;
}

.justify-around {
   justify-content: space-around;
}

.grid {
   display: grid
}

.col-span-2 {
   grid-column: span 2;
}

.gap-1 {
   gap: .5rem;
}

.gap-y-0\.5 {
   row-gap: .25rem;
}

.gap-x-1 {
   column-gap: 1rem;
}

.mt-1 {
   margin-top: 0.5rem;
}

.mt-2 {
   margin-top: 1rem;
}

.mt-3 {
   margin-top: 1.5rem;
}

.mt-4 {
   margin-top: 2rem;
}

.mb-1 {
   margin-bottom: 0.5rem;
}

.mb-2 {
   margin-bottom: 1rem;
}

.mb-3 {
   margin-bottom: 1.5rem;
}

.mb-4 {
   margin-bottom: 2rem;
}

.my-1 {
   margin-block: 0.5rem;
}

.my-2 {
   margin-block: 1rem;
}

.my-3 {
   margin-block: 1.5rem;
}

.my-4 {
   margin-block: 2rem;
}

.pt-1 {
   padding-top: .5rem;
}

.pt-2 {
   padding-top: 1rem;
}

.pt-3 {
   padding-top: 1.5rem;
}

.px-1 {
   padding-inline: .5rem;
}

.px-2 {
   padding-inline: 1rem;
}

.text-right {
   text-align: end;
}

.rounded {
   border-radius: .3rem;
}

.rounded-2 {
   border-radius: .6rem;
}

.rounded-full {
   border-radius: 9999px
}

/* https://webaim.org/techniques/css/invisiblecontent/ */
.visually-hidden {
   clip: rect(1px, 1px, 1px, 1px);
   clip-path: inset(50%);
   height: 1px;
   width: 1px;
   margin: -1px;
   overflow: hidden;
   padding: 0;
   position: absolute;
}

.absolute {
   position: absolute;
}

.relative {
   position: relative;
}

.brighter-selected {
   z-index: 1;
   position: relative;
   overflow: hidden;
}

.brighter-selected::before {
   content: "";
   position: absolute;
   inset: 0;
}

.brighter-selected:focus-visible::before,
.brighter-selected:hover::before {
   z-index: -1;
   -webkit-backdrop-filter: brightness(var(--selected-brightness, 1.5));
   backdrop-filter: brightness(var(--selected-brightness, 1.5));
}

.block {
   display: block;
}

.w-full {
   width: 100%;
}

.h-full {
   height: 100%;
}

.text-left {
   text-align: left;
}

.text-right {
   text-align: right;
}

.text-center {
   text-align: center;
}

.flow>*+* {
   margin-top: var(--flow-space, 1rem);
}

/* ===================== components ======================== */

.key {
   --c-shadow: ;
   --shadow-offset: .2rem;

   display: block;
   border-radius: .3rem;
   box-shadow: 0 var(--shadow-offset) hsl(var(--c-shadow));
   padding-block: 1.1rem .65rem;
}

.key:active {
   box-shadow: 0 0 transparent;
   transform: translateY(var(--shadow-offset));
}

.key--normal {
   --c-shadow: var(--c-normal-key-shadow);
   background-color: hsl(var(--c-normal-key-bg));
}

.key--special {
   --c-shadow: var(--c-special-key-shadow);
   background-color: hsl(var(--c-special-key-bg));
}

.key--most-special {
   --c-shadow: var(--c-most-special-key-shadow);
   background-color: hsl(var(--c-most-special-key-bg));
}

.keyboard {
   grid-template-columns: repeat(4, 1fr);
   padding: 1.5rem;
   gap: clamp(.5rem, 4vw, 1.5rem);
}

.expression-container {
   --scrollbar-fg: hsl(var(--c-text-primary));
   --scrollbar-bg: hsl(var(--c-tertiary));

   height: 5rem;
   background-color: hsl(var(--c-tertiary));
   text-wrap: nowrap;
   overflow-y: hidden;
   padding-inline: 3.5rem 1rem;
   border-radius: .6rem .6rem 0 0;

   scrollbar-color: var(--scrollbar-fg) var(--scrollbar-bg);
}

.operator {
   color: hsl(var(--c-sign));
   margin-inline: .2rem;
}

.paren {
   color: hsl(var(--c-paren));
   margin-inline: .1rem;
}

.expression-container::-webkit-scrollbar {
   height: 10px;
}

.expression-container::-webkit-scrollbar-thumb {
   background-color: var(--scrollbar-fg);
}

.expression-container::-webkit-scrollbar-track {
   background-color: var(--scrollbar-bg);
}

.controls {
   margin-top: 1px;
   background-color: hsl(var(--c-tertiary));
   padding: .5rem 1rem;
   border-radius: 0 0 .6rem .6rem;
}

.history-btn,
.copy-btn {
   opacity: .7;
   outline-offset: .5rem;
}

.history-btn:hover,
.history-btn:focus-visible,
.copy-btn:hover,
.copy-btn:focus-visible {
   opacity: 1;
}

.history-btn:active,
.copy-btn:active {
   transform: scale(.8);
}

.history-popover {
   box-shadow: 0 0 20px hsl(0 0% 0% / .5);
   top: 140%;
   background-color: hsl(var(--c-primary));
   padding: 1.5rem 1rem;
   border: 1px solid hsl(var(--c-text-primary));
   width: min(23rem, 80vw);
   max-height: 20rem;
   overflow-y: scroll;
   z-index: 9999;

   --scrollbar-fg: hsl(var(--c-text-primary) / .4);
   --scrollbar-bg: transparent;

   scrollbar-color: var(--scrollbar-fg) var(--scrollbar-bg);
}

.history-popover::-webkit-scrollbar {
   width: .6rem;
}

.history-popover::-webkit-scrollbar-track {
   background-color: var(--scrollbar-bg);
}

.history-popover::-webkit-scrollbar-thumb {
   background-color: var(--scrollbar-fg);
   border-radius: .6rem;
}

.history-entry {
   width: 100%;
   border: 1px solid hsl(var(--c-text-primary) / .3);
   padding-block: .8rem;
   background-color: hsl(var(--c-secondary));

   transition-property: color, background-color;
   transition-duration: 300ms;
   transition-timing-function: ease;
}

.history-entry__expression,
.history-entry__result {
   width: 100%;
   text-wrap: nowrap;
   text-overflow: ellipsis;
   overflow: hidden;
}

.history-entry:hover,
.history-entry:focus-visible {
   background-color: hsl(var(--c-text-primary));
   color: hsl(var(--c-primary));
   --c-sign: hsl(var(--c-primary));
   --c-paren: hsl(var(--c-primary));
}

/* ====================== radio buttons ============================= */
.radio-group {
   outline: 0;
   border: 0;
   grid-template-areas:
      "..... labels"
      "title inputs";
   column-gap: clamp(.5rem, 5vw, 2rem);
}

.radio-group__title {
   grid-area: title;
   align-self: center;
   /* https://stackoverflow.com/questions/4860708/how-to-position-the-legend-inside-a-fieldset-with-a-border */
   float: left;
}

.radio-group__labels-wrapper {
   grid-area: labels;
}

.radio-group__label {
   display: block;
}

.radio-group__radios-wrapper {
   grid-area: inputs;
   padding: .3rem;
}

.radio-group__radio {
   -webkit-appearance: none;
   appearance: none;
   width: 1rem;
   border-radius: 50%;
   aspect-ratio: 1;
   color: hsl(var(--c-form-control));
}

.radio-group__radio:checked {
   /* @see https://moderncss.dev/pure-css-custom-styled-radio-buttons/
   (i know this isn't js to use jsdoc comments but you get the point) */
   background-color: CanvasText;
   box-shadow: inset 1rem 1rem currentColor;
}

.radio-group__radio:focus-visible {
   outline: 3px dashed hsl(var(--c-text-primary));
   outline-offset: 2px;
}

[role=alert] {
   background-color: hsl(var(--c-most-special-key-bg));
   color: hsl(var(--c-text-tertiary));
   padding: 1rem;
   font-size: 1rem;
   font-weight: 800;
   border-radius: .4rem;
   position: fixed;
   left: 50%;
   transform: translateX(-50%);
   z-index: 9999;
   max-width: min(100vw, 30rem);
}